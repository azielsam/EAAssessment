// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract Error {
    address public owner;
    uint256 public value;

    constructor() {
        owner = msg.sender;
    }

    modifier onlyOwner() {
        require(msg.sender == owner, "Only the owner can call this function");
        _;
    }

    function setValue(uint256 _newValue) external onlyOwner {
        // Use require() to check a condition
        require(_newValue > 0, "Value must be greater than 0");

        // Use assert() to check an invariant
        assert(_newValue != value);

        // Update the value
        value = _newValue;
    }

    function failOperation() external pure {
        // Use revert() to revert the transaction
        revert("This transaction has been reverted");
    }
}
